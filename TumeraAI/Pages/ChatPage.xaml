<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="TumeraAI.Pages.ChatPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TumeraAI.Pages"
    xmlns:types="using:TumeraAI.Main.Types"
    xmlns:utils="using:TumeraAI.Main.Utils"
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ic="using:FluentIcons.WinUI"
    mc:Ignorable="d">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <StackPanel Grid.Row="0"
                            Orientation="Horizontal" 
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="8,0,0,0">
                    <TextBlock Text="History"/>
                </StackPanel>
                <StackPanel Grid.Row="0"
                            Orientation="Horizontal" 
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center">
                    <Button x:Name="ClearHistoryButton"
                            Background="Transparent"
                            BorderThickness="0"
                            ToolTipService.ToolTip="Clear chat history">
                        <Button.Flyout>
                            <Flyout>
                                <StackPanel Width="240">
                                    <TextBlock Text="All past chat sessions will be permanently removed. This action is irreversible."
                                               TextWrapping="WrapWholeWords"
                                               Margin="0,0,0,12"/>
                                    <Button Click="ClearHistoryButton_Click" 
                                            Content="Proceed"/>
                                </StackPanel>
                            </Flyout>
                        </Button.Flyout>
                        <StackPanel>
                            <ic:SymbolIcon Symbol="Delete"/>
                        </StackPanel>
                    </Button>
                    <Button x:Name="NewChatButton"
                            Background="Transparent"
                            BorderThickness="0"
                            ToolTipService.ToolTip="Create a new chat session"
                            Click="NewChatButton_Click">
                        <StackPanel>
                            <ic:SymbolIcon Symbol="Add"/>
                        </StackPanel>
                    </Button>
                </StackPanel>
            </Grid>
            <Border Width="180"
                    Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                    BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                    BorderThickness="1,1,1,0"
                    CornerRadius="8"
                    Grid.Row="1"
                    Margin="0,9,0,0">
                <ListView x:Name="ChatHistoryListView"
                          Margin="0,5,0,0"
                          SelectionChanged="ChatHistoryListView_SelectionChanged"
                          ItemsSource="{x:Bind Sessions}">
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsStackPanel ItemsUpdatingScrollMode="KeepLastItemInView"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="types:ChatSession">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Orientation="Vertical"
                                            Grid.Column="0">
                                    <StackPanel.ContextFlyout>
                                        <MenuFlyout>
                                            <MenuFlyoutItem Text="Duplicate" 
                                                            Click="DuplicateSessionBtn_Click"/>
                                            <MenuFlyoutItem Text="Delete" 
                                                            Click="DeleteSessionBtn_Click"/>
                                        </MenuFlyout>
                                    </StackPanel.ContextFlyout>
                                    <TextBlock Margin="0,8,0,8">
                                        <Run Text="{x:Bind Name}"/>
                                    </TextBlock>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Border>
        </Grid>
        <Grid Grid.Column="1" Margin="8,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <StackPanel Orientation="Horizontal" 
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center">
                    <Button x:Name="InferenceConfigButton"
                            Margin="6,0,0,0"
                            Height="35.62"
                            Background="Transparent"
                            BorderThickness="0"
                            ToolTipService.ToolTip="Configure various inference parameters">
                        <Button.Flyout>
                            <Flyout>
                                <ScrollViewer VerticalScrollBarVisibility="Auto"
                                              Width="300"
                                              Height="400">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <StackPanel Grid.Row="0"
                                                    HorizontalAlignment="Left">
                                            <TextBlock Text="System Prompt"
                                                   ToolTipService.ToolTip="A set of instructions, guidelines and/or information for the AI to follow throughout the conversation. Also known in a role-playing context as Character Card."/>
                                            <TextBox x:Name="SystemPromptTextBox"
                                                     Width="280"
                                                     Height="213.72"
                                                     Margin="0,6,0,0"
                                                     PlaceholderText="Enter your system prompt here. You may also insert additional system prompt on the fly by switching your role to 'System'."                                                    
                                                     AcceptsReturn="True"
                                                     TextWrapping="Wrap"
                                                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                     Text="{x:Bind utils:RuntimeConfig.SystemPrompt, Mode=TwoWay}"/>
                                        </StackPanel>
                                        <StackPanel Grid.Row="1">
                                            <ToggleSwitch x:Name="StreamResponsesToggleSwitch"
                                                      OffContent="Stream Responses"
                                                      OnContent="Stream Responses"
                                                      IsOn="{x:Bind utils:RuntimeConfig.StreamResponse, Mode=TwoWay}"
                                                      ToolTipService.ToolTip="Output AI responses in real time as it's being generated instead of waiting for the full message. The messages history will flicker during streaming, a fix is currently being figured out."/>
                                            <StackPanel Orientation="Horizontal"
                                                        HorizontalAlignment="Left">
                                                <TextBlock Text="Seed"
                                                           Margin="0,6,0,0"
                                                           ToolTipService.ToolTip="The seed for the Random Number Generator (RNG). Setting the same seed everytime will allow you to reproduce AI responses consistently. Set to -1 to randomize it every time, making every responses different."/>
                                                <NumberBox x:Name="SeedNumberBox"
                                                           Margin="6,0,0,0"
                                                           SpinButtonPlacementMode="Inline"
                                                           Value="{x:Bind utils:RuntimeConfig.Seed, Mode=TwoWay}"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal"
                                                        HorizontalAlignment="Left"
                                                        Margin="0,6,0,0">
                                                <TextBlock Text="Temperature"
                                                           Margin="0,6,0,0"
                                                           ToolTipService.ToolTip="The randomness of generated responses. Lower temperature will yield more predictable and more deterministic responses, while higher temperature will yield less predictable and more creative responses."/>
                                                <NumberBox x:Name="TemperatureNumberBox"
                                                           Margin="6,0,0,0"
                                                           SpinButtonPlacementMode="Inline"
                                                           Value="{x:Bind utils:RuntimeConfig.Temperature, Mode=TwoWay}"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal"
                                                        HorizontalAlignment="Left"
                                                        Margin="0,6,0,0">
                                                <TextBlock Text="Max Tokens"
                                                           Margin="0,6,0,0"
                                                           ToolTipService.ToolTip="The maximum amount of tokens the AI will generate per response. Set to -1 to generate infinitely. Depending on the model's tokenizer, a token does not always equal to a complete word."/>
                                                <NumberBox x:Name="MaxTokensNumberBox"
                                                           Margin="6,0,0,0"
                                                           SpinButtonPlacementMode="Inline"
                                                           Value="{x:Bind utils:RuntimeConfig.MaxTokens, Mode=TwoWay}"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal"
                                                        HorizontalAlignment="Left"
                                                        Margin="0,6,0,0">
                                                <TextBlock Text="Frequency Penalty"
                                                           Margin="0,6,0,0"
                                                           ToolTipService.ToolTip="(From OpenAI's docs) Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim."/>
                                                <NumberBox x:Name="FreqPenaltyNumberBox"
                                                           Margin="6,0,0,0"
                                                           SpinButtonPlacementMode="Inline"
                                                           Minimum="-2.0"
                                                           Maximum="2.0"
                                                           Value="{x:Bind utils:RuntimeConfig.FrequencyPenalty, Mode=TwoWay}"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal"
                                                        HorizontalAlignment="Left"
                                                        Margin="0,6,0,0">
                                                <TextBlock Text="Presence Penalty"
                                                           Margin="0,6,0,0"
                                                           ToolTipService.ToolTip="(From OpenAI's docs) Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics."/>
                                                <NumberBox x:Name="PresPenaltyNumberBox"
                                                           Margin="6,0,0,0"
                                                           SpinButtonPlacementMode="Inline"
                                                           Minimum="-2.0"
                                                           Maximum="2.0"
                                                           Value="{x:Bind utils:RuntimeConfig.PresencePenalty, Mode=TwoWay}"/>
                                            </StackPanel>
                                        </StackPanel>
                                    </Grid>
                                </ScrollViewer>
                            </Flyout>
                        </Button.Flyout>
                        <StackPanel>
                            <ic:SymbolIcon Symbol="Wrench"/>
                        </StackPanel>
                    </Button>
                    <Button x:Name="ConnectButton"
                            Margin="6,0,0,0"
                            Height="35.62"
                            Background="Transparent"
                            BorderThickness="0"
                            ToolTipService.ToolTip="Connect to an OpenAI-compatible endpoint">
                        <StackPanel>
                            <ic:SymbolIcon Symbol="PlugDisconnected"/>
                        </StackPanel>
                        <Button.Flyout>
                            <Flyout>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <StackPanel Grid.Row="0">
                                        <TextBlock Text="URL"/>
                                        <TextBox x:Name="URLTextBox"
                                                 PlaceholderText="http://localhost:8080"
                                                 Width="195"
                                                 Margin="0,6,0,0"
                                                 Text="{x:Bind utils:RuntimeConfig.EndpointURL, Mode=TwoWay}"/>
                                        <TextBlock Text="API Key (optional)"
                                                   Margin="0,12,0,0"/>
                                        <TextBox x:Name="APIKeyTextBox"
                                                 Width="195"
                                                 Margin="0,6,0,0"
                                                 Text="{x:Bind utils:RuntimeConfig.EndpointAPIKey, Mode=TwoWay}"/>
                                    </StackPanel>
                                    <StackPanel Grid.Row="1"
                                                Orientation="Horizontal"
                                                Margin="0,15,0,0">
                                        <Button x:Name="APIConnectButton"
                                                Content="Connect"
                                                Click="APIConnectButton_Click"/>
                                        <TextBlock x:Name="ModelTextBlock"
                                                   Text="Not Connected"
                                                   Margin="8,5,0,0"/>
                                    </StackPanel>
                                </Grid>
                            </Flyout>
                        </Button.Flyout>

                    </Button>
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center">
                    <TextBlock x:Name="ConnectionStatus"
                               Text="No OpenAI-compatible endpoint connected"
                               Margin="0,8,0,0"
                               HorizontalAlignment="Right"/>
                    <ComboBox x:Name="SelectedModelComboBox"
                              Margin="8,4,0,0"
                              Width="245"
                              ItemsSource="{x:Bind Models}"
                              DisplayMemberPath="Name"/>
                    <ProgressRing x:Name="TaskRing"
                                  IsIndeterminate="False"
                                  Width="16"
                                  Height="16"
                                  Margin="8,11,0,0"/>
                </StackPanel>
            </Grid>
            <Grid Grid.Row="1" 
                  Margin="0,6,0,0">
                <Grid>
                    <Border Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                            BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                            BorderThickness="1,1,1,0"
                            CornerRadius="8">
                        <ListView x:Name="MessagesListView"
                                  SelectionMode="None"
                                  ScrollViewer.VerticalScrollBarVisibility="Auto">
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <ItemsStackPanel ItemsUpdatingScrollMode="KeepLastItemInView"/>
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                            <ListView.ItemTemplate>
                                <DataTemplate x:DataType="types:Message">
                                    <Grid Margin="0,10,0,0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Border Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                                                BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                                                BorderThickness="1,1,1,0"
                                                CornerRadius="8"
                                                Padding="12,8,12,8">
                                            <StackPanel Grid.Row="0">
                                                <TextBlock Style="{ThemeResource BaseTextBlockStyle}">
                                                    <Run Text="{x:Bind RoleName}"/>
                                                    <Run Text="{x:Bind FormattedTime}"
                                                         FontSize="10"/>
                                                </TextBlock>
                                                <controls:MarkdownTextBlock Text="{x:Bind Content}"
                                                                            TextWrapping="Wrap"
                                                                            IsTextSelectionEnabled="True"
                                                                            Background="Transparent"
                                                                            UseSyntaxHighlighting="True"
                                                                            Margin="0,8,0,0"/>
                                            </StackPanel>
                                        </Border>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Border>
                </Grid>
            </Grid>
            <Grid Grid.Row="2" 
                  Margin="0,10,0,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Button x:Name="RoleSwitchButton"
                            Content="User"
                            Height="35.62"
                            Margin="0,0,11,0"
                            Click="RoleSwitchButton_Click"
                            ToolTipService.ToolTip="Switch between roles (user, assistant and system). The 'User' role is for normal conversation. The 'Assistant' role is for inserting responses as the AI so that you can steer it towards a specific direction if so desired. The 'System' role is used to give the AI instructions, guidelines and/or information that it will follow throughout the conversation. Sending prompts as 'Assistant' or 'System' will not trigger inference (unless you choose to do so yourself)."/>
                    <TextBox x:Name="PromptTextBox"
                             Grid.Column="1"
                             PlaceholderText="Enter your prompt here"
                             MaxHeight="142.48"
                             AcceptsReturn="True"
                             TextWrapping="Wrap"
                             ScrollViewer.VerticalScrollBarVisibility="Auto"
                             KeyUp="PromptTextBox_KeyUp"/>
                    <Button x:Name="SendButton"
                            Margin="11,0,0,0"
                            Height="35.62"
                            Grid.Column="2"
                            Style="{StaticResource AccentButtonStyle}"
                            Click="SendButton_Click"
                            ToolTipService.ToolTip="Send the prompt and perform inference ('User' role only)">
                        <StackPanel>
                            <ic:SymbolIcon Symbol="Send"/>
                        </StackPanel>
                    </Button>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Page>
